{
  "openapi": "3.0.1",
  "info": {
    "title": "Teams and Tournament",
    "description": "API for handling teams and tournament administration",
    "version": "0.0.1"
  },
  "tags": [{ "name": "Teams" }, { "name": "Matches" }, { "name":  "Tasks" }],
  "servers": [],
  "paths": {
    "/teams": {
      "get": {
        "summary": "Get all teams",
        "tags": ["Teams"],
        "parameters": [
          {
            "in": "query",
            "name": "group",
            "description": "Group number team is part of",
            "schema": {
              "type": "number"
            },
            "allowReserved": true
          }
        ],
        "responses": {
          "200": {
            "description": "List of teams, empty array if no teams exist",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/team"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unable to perform the operation"
          }
        }
      },
      "post": {
        "tags": [
          "Teams"
        ],
        "summary": "Create a new team",
        "requestBody": {
          "description": "Team to create",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/team"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Team was successfully created"
          }
        }
      }
    },
    "/teams/shuffle": {
      "post": {
        "tags": [
          "Teams"
        ],
        "summary": "Shuffle teams into groups",
        "requestBody": {
          "description": "Parameters to shuffle",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/shuffleParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Teams wer successfully shuffled",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/group"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unable to perform the operation"
          }
        }
      }
    },
    "/matches": {
      "get": {
        "summary": "Get all matches",
        "tags": ["Matches"],
        "parameters": [
          {
            "in": "query",
            "name": "date",
            "description": "Date of match",
            "schema": {
              "type": "string"
            },
            "allowReserved": true
          }
        ],
        "responses": {
          "200": {
            "description": "List of Matches, empty array if no teams exist",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/match"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unable to perform the operation"
          }
        }
      }
    },
    "/matches/{id}": {
      "get": {
        "summary": "Get match with specific id",
        "tags": ["Matches"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "$ref": "#/components/schemas/uuid"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Match with requested id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/match"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unable to perform the operation"
          }
        }
      },
      "put": {
        "summary": "Update match with specific id",
        "tags": ["Matches"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "$ref": "#/components/schemas/uuid"
            },
            "required": true
          }
        ],
        "requestBody": {
          "description": "Match to update",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/match"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Match successfully updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/match"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unable to perform the operation"
          }
        }
      }
    },
    "/matches/import": {
      "post": {
        "summary": "Import bulk of matches",
        "tags": ["Matches"],
        "responses": {
          "201": {
            "description": "List of Matches that have been imported",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/match"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unable to perform the operation"
          }
        }
      }
    },
    "/tasks": {
      "get": {
        "summary": "Get all tasks",
        "tags": ["Tasks"],
        "parameters": [
          {
            "in": "query",
            "name": "dueDate",
            "description": "Due date of a task to filter for.",
            "schema": {
              "type": "string"
            },
            "allowReserved": true
          }
        ],
        "responses": {
          "200": {
            "description": "List of Tasks, empty array if no teams exist",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/task"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unable to perform the operation"
          }
        }
      },
      "post": {
        "tags": [
          "Tasks"
        ],
        "summary": "Create a new task",
        "requestBody": {
          "description": "Task to create",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/task"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Task was successfully created",
            "headers": {
              "Location": {
                "description": "Task id that has been created",
                "schema": {
                  "$ref": "#/components/schemas/uuid"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/task"
                }
              }
            }
          }
        }
      }
    },
    "/tasks/{id}": {
      "get": {
        "summary": "Get task with specific task id",
        "tags": ["Tasks"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "$ref": "#/components/schemas/uuid"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Task with requested id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/task"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unable to perform the operation"
          }
        }
      },
      "put": {
        "summary": "Update task with specific task id",
        "tags": ["Tasks"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "$ref": "#/components/schemas/uuid"
            },
            "required": true
          }
        ],
        "requestBody": {
          "description": "Task to update",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/task"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Task successfully updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/task"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unable to perform the operation"
          }
        }
      }
    },
    "/tasks/{id}/assign": {
      "put": {
        "summary": "Assign random assignee to task with id",
        "tags": ["Tasks"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "$ref": "#/components/schemas/uuid"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Task successfully updated"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unable to perform the operation"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "uuid": {
        "type": "string",
        "description": "UUID version 4 depending on the usage",
        "example": "02d3f7b1-1c45-467f-ace6-d0eb41f477ee"
      },
      "team": {
        "type": "object",
        "description": "Team",
        "properties": {
          "name": {
            "type": "string"
          }
        },
        "required": ["name"]
      },
      "shuffleParameters": {
        "type": "object",
        "properties": {
          "numberOfGroups": {
            "type": "number",
            "description": "Number of groups the teams should be distributed to"
          }
        },
        "required": ["numberOfGroups"]
      },
      "group": {
        "type": "object",
        "description": "Group of teams",
        "properties": {
          "number": {
            "type": "number"
          },
          "teams": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/team"
            }
          }
        },
        "required": ["number", "teams"]
      },
      "match": {
        "type": "object",
        "description": "Match",
        "properties": {
          "date": {
            "type": "string"
          },
          "day": {
            "type":  "string"
          },
          "homeTeam": {
            "type":  "string"
          },
          "awayTeam": {
            "type":  "string"
          },
          "location": {
            "type":  "string"
          },
          "availablePlayers": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": ["date", "day", "homeTeam", "awayTeam", "location"]
      },
      "task": {
        "type": "object",
        "description": "Task",
        "properties": {
          "type": {
            "type": "string",
            "enum": ["simple", "complex"]
          },
          "taskId": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "dueDate": {
            "type": "string"
          },
          "assignedPlayers": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "numberOfNeeds": {
            "type": "number"
          }
        },
        "required": ["type", "description","dueDate", "assignedPlayers", "numberOfNeeds"],
        "additionalProperties": false
      }
    }
  }
}
